{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "GooseTrack API docs",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://goosetrack-backend-sbmd.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email or User name already in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password invalid",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/user": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user info",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "User info object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/avatar": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User info object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Get new pait of tokens (Use 'Bearer {refreshToken}')",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logot user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create new task",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "task data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/{taskId}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update task",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the task to delete"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the task to delete"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/getByDay/{day}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Update task",
        "parameters": [
          {
            "name": "day",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The day identifier  to find tasks"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksByDayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/getByMonth/{month}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Update task",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The month identifier  to find tasks"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksByMonthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/reviews/": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Gets some fixed ammount of users reviews",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllReviewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/reviews/own": {
      "post": {
        "tags": ["Reviews"],
        "summary": "Adds new review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Review data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Reviews"],
        "summary": "Updates existing review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Review data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Reviews"],
        "summary": "Gets current users review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Deletes current users review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["userName", "email", "password"],
        "properties": {
          "userName": {
            "type": "string",
            "description": "User name",
            "example": "user6"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Aa111111"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": 201,
            "message": "New user created",
            "data": {
              "accessToken": {
                "type": "string",
                "description": "accessToken",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MWFjZGM4YjZlODU4NGU5MmZiOWUyMiIsImlhdCI6MTY5NjI1NTQzMywiZXhwIjoxNjk2MzQxODMzfQ.WTGaaSUbW1iSazgyzuXqm0qcE1EETgcCo3clGfAiaEE"
              },
              "refreshToken": {
                "type": "string",
                "description": "refreshToken",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MWFjZGM4YjZlODU4NGU5MmZiOWUyMiIsImlhdCI6MTY5NjI1NTQzMywiZXhwIjoxNjk4ODQ3NDMzfQ.1gle8J8dORelUaG3EOiM3iBo246x1TDmA3Q8cAUpGQU"
              },
              "user": {
                "userName": {
                  "type": "string",
                  "description": "User name",
                  "example": "user6"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                }
              }
            }
          }
        },
        "example": {
          "code": 201,
          "message": "New user created",
          "data": {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MWFjZGM4YjZlODU4NGU5MmZiOWUyMiIsImlhdCI6MTY5NjI1NTQzMywiZXhwIjoxNjk2MzQxODMzfQ.WTGaaSUbW1iSazgyzuXqm0qcE1EETgcCo3clGfAiaEE",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MWFjZGM4YjZlODU4NGU5MmZiOWUyMiIsImlhdCI6MTY5NjI1NTQzMywiZXhwIjoxNjk4ODQ3NDMzfQ.1gle8J8dORelUaG3EOiM3iBo246x1TDmA3Q8cAUpGQU",
            "user": {
              "userName": "user6",
              "email": "user6@gmail.com"
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Aa111111"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": 200,
            "message": "User signed in",
            "data": {
              "accessToken": {
                "type": "string",
                "description": "accessToken",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MWFjZGM4YjZlODU4NGU5MmZiOWUyMiIsImlhdCI6MTY5NjI1NTQzMywiZXhwIjoxNjk2MzQxODMzfQ.WTGaaSUbW1iSazgyzuXqm0qcE1EETgcCo3clGfAiaEE"
              },
              "refreshToken": {
                "type": "string",
                "description": "refreshToken",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MWFjZGM4YjZlODU4NGU5MmZiOWUyMiIsImlhdCI6MTY5NjI1NTQzMywiZXhwIjoxNjk4ODQ3NDMzfQ.1gle8J8dORelUaG3EOiM3iBo246x1TDmA3Q8cAUpGQU"
              },
              "user": {
                "userName": {
                  "type": "string",
                  "description": "User name",
                  "example": "user6"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "avatarUrl": {
                  "type": "string",
                  "description": "Avatar URL",
                  "example": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/o1uwlh4unrflqcvedam6.jpg"
                },
                "birthday": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1992-10-11"
                },
                "phone": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1234561144"
                },
                "skype": {
                  "type": "string",
                  "description": "Users skype",
                  "example": "SomeName"
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "User signed in",
          "data": {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTZkNTUxYjJjY2E5YmMyMzRlYTlmZSIsImlhdCI6MTY5NjI1NjQyMSwiZXhwIjoxNjk2MzQyODIxfQ.D1UTvDuN9uaZ3Op71Le183fiHEzywXkDAfzPQsFYxX0",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTZkNTUxYjJjY2E5YmMyMzRlYTlmZSIsImlhdCI6MTY5NjI1NjQyMSwiZXhwIjoxNjk4ODQ4NDIxfQ.II2S-PufqYZGNkdSUlc_yESF2z8Pjmd-VGBsgcN8F4Y",
            "user": {
              "userName": "user___1",
              "email": "user1@gmail.com",
              "avatarUrl": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/o1uwlh4unrflqcvedam6.jpg",
              "birthday": "1992-10-11",
              "phone": "1234561144",
              "skype": "SomeName"
            }
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": 200,
            "message": "User signed in",
            "data": {
              "user": {
                "userName": {
                  "type": "string",
                  "description": "User name",
                  "example": "user6"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "avatarUrl": {
                  "type": "string",
                  "description": "Avatar URL",
                  "example": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/o1uwlh4unrflqcvedam6.jpg"
                },
                "birthday": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1992-10-11"
                },
                "phone": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1234561144"
                },
                "skype": {
                  "type": "string",
                  "description": "Users skype",
                  "example": "SomeName"
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Current user data",
          "data": {
            "user": {
              "userName": "user___1",
              "email": "user1@gmail.com",
              "avatarUrl": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/o1uwlh4unrflqcvedam6.jpg",
              "birthday": "1992-10-11",
              "phone": "1234561144",
              "skype": "SomeName"
            }
          }
        }
      },
      "UpdateUserInfoRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "userName": {
            "type": "string",
            "description": "User name",
            "example": "user6"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "1111111111"
          },
          "skype": {
            "type": "string",
            "description": "User's skype",
            "example": "SomeName"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday date",
            "example": "1995-10-10"
          }
        }
      },
      "UpdateUserInfoResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": 200,
            "message": "User info updated",
            "data": {
              "userName": {
                "type": "string",
                "description": "User name",
                "example": "user123"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "birthday": {
                "type": "string",
                "description": "Users birthday",
                "example": "1995-10-10"
              },
              "phone": {
                "type": "string",
                "description": "Users birthday",
                "example": "1111111111"
              },
              "skype": {
                "type": "string",
                "description": "Users skype",
                "example": "SomeName"
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "User info updated",
          "data": {
            "phone": "1111111111",
            "skype": "SomeName",
            "birthday": "1995-10-10",
            "email": "user1@gmail.com",
            "userName": "user123"
          }
        }
      },
      "UpdateAvatarRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "file"
          }
        }
      },
      "UpdateAvatarResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": 200,
            "message": "User avatar updated",
            "data": {
              "avatarUrl": {
                "type": "string",
                "description": "User avatar url",
                "example": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/tiqbnrjcaxsgn4lvxbiz.jpg"
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "User avatar updated",
          "data": {
            "avatarUrl": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/tiqbnrjcaxsgn4lvxbiz.jpg"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": 200,
            "message": "Tokens refreshed",
            "data": {
              "accessToken": {
                "type": "string",
                "description": "accessToken",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MWFjZGM4YjZlODU4NGU5MmZiOWUyMiIsImlhdCI6MTY5NjI1NTQzMywiZXhwIjoxNjk2MzQxODMzfQ.WTGaaSUbW1iSazgyzuXqm0qcE1EETgcCo3clGfAiaEE"
              },
              "refreshToken": {
                "type": "string",
                "description": "refreshToken",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MWFjZGM4YjZlODU4NGU5MmZiOWUyMiIsImlhdCI6MTY5NjI1NTQzMywiZXhwIjoxNjk4ODQ3NDMzfQ.1gle8J8dORelUaG3EOiM3iBo246x1TDmA3Q8cAUpGQU"
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Tokens refreshed",
          "data": {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTZkNTUxYjJjY2E5YmMyMzRlYTlmZSIsImlhdCI6MTY5NjI1ODgxNiwiZXhwIjoxNjk2MzQ1MjE2fQ.DZ-52VVtySdRWbvBMvshy7E1P8UCXVYGqafMTkTlvdQ",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTZkNTUxYjJjY2E5YmMyMzRlYTlmZSIsImlhdCI6MTY5NjI1ODgxNiwiZXhwIjoxNjk4ODUwODE2fQ.3IIk5iy-waPGUTY5Wy-qqODQe3KKPfdt0YuMss7z9Ww"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": 200,
            "message": "Logout success"
          }
        },
        "example": {
          "code": 200,
          "message": "Logout success"
        }
      },
      "CreateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Some task title",
            "example": "Some task title"
          },
          "priority": {
            "type": "string",
            "description": "Priority of the task",
            "example": "medium"
          },
          "status": {
            "type": "string",
            "description": "Status of the task",
            "example": "todo"
          },
          "date": {
            "type": "string",
            "description": "Date of the task",
            "example": "2023-10-10"
          },
          "start": {
            "type": "string",
            "description": "Start time of the task",
            "example": "00:00"
          },
          "end": {
            "type": "string",
            "description": "End time of the task",
            "example": "20:20"
          }
        }
      },
      "CreateTaskResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 201
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "New task created"
            },
            "data": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique identifier for the created task",
                  "example": "651af32c1281770165a9be89"
                },
                "title": {
                  "type": "string",
                  "description": "Task title",
                  "example": "Some task title"
                },
                "priority": {
                  "type": "string",
                  "description": "Task priority",
                  "example": "medium"
                },
                "status": {
                  "type": "string",
                  "description": "Task status",
                  "example": "todo"
                },
                "date": {
                  "type": "string",
                  "description": "Date of the task",
                  "example": "2023-10-10"
                },
                "start": {
                  "type": "string",
                  "description": "Start time of the task",
                  "example": "00:00"
                },
                "end": {
                  "type": "string",
                  "description": "End time of the task",
                  "example": "20:20"
                }
              }
            }
          }
        },
        "example": {
          "code": 201,
          "message": "New task created",
          "data": {
            "_id": "651af32c1281770165a9be89",
            "title": "Some task title",
            "priority": "medium",
            "status": "todo",
            "date": "2023-10-10",
            "start": "00:00",
            "end": "20:20"
          }
        }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Some changed task title"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "high"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "example": "todo"
          },
          "date": {
            "type": "string",
            "description": "Date of the task",
            "example": "2023-10-10"
          },
          "start": {
            "type": "string",
            "description": "Start time of the task",
            "example": "02:00"
          },
          "end": {
            "type": "string",
            "description": "End time of the task",
            "example": "20:20"
          }
        }
      },
      "UpdateTaskResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Task updated"
            },
            "data": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique identifier for the updated task",
                  "example": "651af32c1281770165a9be89"
                },
                "title": {
                  "type": "string",
                  "description": "Task title",
                  "example": "Some changed task title"
                },
                "priority": {
                  "type": "string",
                  "description": "Task priority",
                  "example": "high"
                },
                "status": {
                  "type": "string",
                  "description": "Task status",
                  "example": "todo"
                },
                "date": {
                  "type": "string",
                  "description": "Date of the task",
                  "example": "2023-10-10"
                },
                "start": {
                  "type": "string",
                  "description": "Start time of the task",
                  "example": "02:00"
                },
                "end": {
                  "type": "string",
                  "description": "End time of the task",
                  "example": "20:20"
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Task updated",
          "data": {
            "_id": "651af32c1281770165a9be89",
            "title": "Some changed task title",
            "priority": "high",
            "status": "todo",
            "date": "2023-10-10",
            "start": "02:00",
            "end": "20:20"
          }
        }
      },
      "DeleteTaskResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Task deleted"
            },
            "data": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique identifier for the deleted task",
                  "example": "651af32c1281770165a9be89"
                },
                "title": {
                  "type": "string",
                  "description": "Task title",
                  "example": "Some changed task title"
                },
                "priority": {
                  "type": "string",
                  "description": "Task priority",
                  "example": "high"
                },
                "status": {
                  "type": "string",
                  "description": "Task status",
                  "example": "todo"
                },
                "date": {
                  "type": "string",
                  "description": "Date of the task",
                  "example": "2023-10-10"
                },
                "start": {
                  "type": "string",
                  "description": "Start time of the task",
                  "example": "02:00"
                },
                "end": {
                  "type": "string",
                  "description": "End time of the task",
                  "example": "20:20"
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Task deleted",
          "data": {
            "_id": "651af32c1281770165a9be89",
            "title": "Some changed task title",
            "priority": "high",
            "status": "todo",
            "date": "2023-10-10",
            "start": "02:00",
            "end": "20:20"
          }
        }
      },
      "GetTasksByDayResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Tasks for 2023-12-10"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier for the task",
                    "example": "6519b2cd21711d86afea4a41"
                  },
                  "title": {
                    "type": "string",
                    "description": "Task title",
                    "example": "Test task 1"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Task priority",
                    "example": "medium"
                  },
                  "status": {
                    "type": "string",
                    "description": "Task status",
                    "example": "todo"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the task",
                    "example": "2023-12-10"
                  },
                  "start": {
                    "type": "string",
                    "description": "Start time of the task",
                    "example": "10:10"
                  },
                  "end": {
                    "type": "string",
                    "description": "End time of the task",
                    "example": "20:20"
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Tasks for 2023-12-10",
          "data": [
            {
              "_id": "6519b2cd21711d86afea4a41",
              "title": "Test task 1",
              "priority": "medium",
              "status": "todo",
              "date": "2023-12-10",
              "start": "10:10",
              "end": "20:20"
            },
            {
              "_id": "6519bccc613be498c20e5a1c",
              "title": "Test task 1",
              "priority": "medium",
              "status": "todo",
              "date": "2023-12-10",
              "start": "10:10",
              "end": "20:20"
            }
          ]
        }
      },
      "GetTasksByMonthResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Tasks for 2023-11"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier for the task",
                    "example": "6519b2c721711d86afea4a3e"
                  },
                  "title": {
                    "type": "string",
                    "description": "Task title",
                    "example": "Test task 1"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Task priority",
                    "example": "medium"
                  },
                  "status": {
                    "type": "string",
                    "description": "Task status",
                    "example": "todo"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the task",
                    "example": "2023-11-10"
                  },
                  "start": {
                    "type": "string",
                    "description": "Start time of the task",
                    "example": "10:10"
                  },
                  "end": {
                    "type": "string",
                    "description": "End time of the task",
                    "example": "20:20"
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Tasks for 2023-11",
          "data": [
            {
              "_id": "6519b2c721711d86afea4a3e",
              "title": "Test task 1",
              "priority": "medium",
              "status": "todo",
              "date": "2023-11-10",
              "start": "10:10",
              "end": "20:20"
            },
            {
              "_id": "6519b2da21711d86afea4a4a",
              "title": "Test task 1",
              "priority": "medium",
              "status": "todo",
              "date": "2023-11-15",
              "start": "10:10",
              "end": "20:20"
            }
          ]
        }
      },
      "AddReviewRequest": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "description": "User's rating for the item",
            "example": 4
          },
          "comment": {
            "type": "string",
            "description": "User's comment",
            "example": "User 1 comment"
          }
        }
      },
      "AddReviewResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 201
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Review added"
            },
            "data": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "integer",
                  "description": "User's rating for the item",
                  "example": 4
                },
                "comment": {
                  "type": "string",
                  "description": "User's comment",
                  "example": "User 1 comment"
                }
              }
            }
          }
        },
        "example": {
          "code": 201,
          "message": "Review added",
          "data": {
            "rating": 4,
            "comment": "User 1 comment"
          }
        }
      },
      "UpdateReviewRequest": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "description": "User's updated rating for the item",
            "example": 5
          },
          "comment": {
            "type": "string",
            "description": "User's updated comment",
            "example": "Some changed review comment"
          }
        }
      },
      "UpdateReviewResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Review updated"
            },
            "data": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "integer",
                  "description": "User's updated rating for the item",
                  "example": 5
                },
                "comment": {
                  "type": "string",
                  "description": "User's updated comment",
                  "example": "Some changed review comment"
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Review updated",
          "data": {
            "rating": 5,
            "comment": "Some changed review comment"
          }
        }
      },
      "GetUsersReviewResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "User review"
            },
            "data": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "integer",
                  "description": "User's rating for the item",
                  "example": 5
                },
                "comment": {
                  "type": "string",
                  "description": "User's comment",
                  "example": "Some changed review comment"
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "User review",
          "data": {
            "rating": 5,
            "comment": "Some changed review comment"
          }
        }
      },
      "DeleteReviewResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Review deleted"
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Review deleted"
        }
      },
      "GetAllReviewsResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Reviews found"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "integer",
                    "description": "User's rating for the item",
                    "example": 4
                  },
                  "comment": {
                    "type": "string",
                    "description": "User's comment",
                    "example": "User 1 comment"
                  },
                  "userName": {
                    "type": "string",
                    "description": "User's username",
                    "example": "user321"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier for the review",
                    "example": "651b1f7ecb52e05e6845b1d4"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "URL of the user's avatar",
                    "example": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/wi1wvyugl88q6fkw6fhd.jpg"
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "message": "Reviews found",
          "data": [
            {
              "rating": 4,
              "comment": "User 1 comment",
              "userName": "user321",
              "_id": "651b1f7ecb52e05e6845b1d4",
              "avatarUrl": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/wi1wvyugl88q6fkw6fhd.jpg"
            },
            {
              "rating": 4,
              "comment": "User 2 comment",
              "userName": "user2",
              "_id": "651b1f5fcb52e05e6845b1d0",
              "avatarUrl": "http://res.cloudinary.com/dzrvw6uic/image/upload/c_fill,h_250,w_250/rory3qdqxkussty5pwra.jpg"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
